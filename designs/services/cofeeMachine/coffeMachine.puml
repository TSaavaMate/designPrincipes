@startuml

interface PowerSwitch {
  + isOn(): boolean
  + turnOn(): void
  + turnOff(): void
}

interface Fillable {
  + getLevel(): int
  + fill(level: int): void
}

abstract class CoffeeMachine implements PowerSwitch, Fillable {
  - String name
  - int waterLevel
  - int milkLevel
  -int sugarLevel
  - int coffeeBeansLevel
  + CoffeeMachine(name: String)
  + getName(): String
  + getMilkLevel(): int
  + getSugarLevel(): int
  + fill(level: int): void
  + makeCoffee(): void
  + cleanMachine(): void
}

class ConcreteCoffeMachnine extends CoffeeMachine {
  + BasicCoffeeMachine(name: String)
  + makeCoffee(): void
}

abstract class Beverage{
    -String description
    + getDescription():String
    +{abstract} cost():double
}
class AnyOtherConcreteCoffe{
    + cost():double
}
class Decaf{
    + cost():double
}
class Espresso{
    + cost():double

}

abstract class CondimentDecorator extends Beverage {
    +{abstract} getDescription()
}
class Mocha extends CondimentDecorator{
    Beverage beverage
    getDescription():String
    cost():double
}
class AnyOtherCoffeType extends CondimentDecorator{
    Beverage beverage
    getDescription():String
    cost():double
}
class Milk extends CondimentDecorator{
    Beverage beverage
    getDescription():String
    cost():double
}
enum Coffe {
Milk
Mocha
Whip
}
Beverage  *--  Espresso
Beverage  *--  Decaf
Beverage  *--  AnyOtherConcreteCoffe

class Coffee implements Beverage {
  - String type
  + Coffee(type: String)
  + getType(): String
}

class Cup {
  - int size
  + getSize(): int
}

CoffeeMachine <|.. ConcreteCoffeMachnine
Beverage  "1" *-- "1" CoffeeMachine
CoffeeMachine "1" *-- "1" Cup

@enduml
