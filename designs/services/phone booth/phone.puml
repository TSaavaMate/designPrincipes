@startuml

interface PhoneBooth {
  + isOccupied(): boolean
  + occupy(phoneNumber: String): void
  + release(): void
  + insertPhoneNumber(): String
  + insertCoin(coin: Coin): void
  +interrupt():void
  + makeCall(PublicCall: call): void
  + endCall(): void
}

class PublicPhoneBooth implements PhoneBooth {
  - boolean isOccupied
  - String phoneNumber
  - List<Coin> insertedCoins
  - int callDuration
  + isOccupied(): boolean
  + occupy(phoneNumber: String): void
  + release(): void
  +interrupt():void
  + insertPhoneNumber(): String
  + insertCoin(coin: Coin): void
  + makeCall(PublicCall: call): void
  + endCall(): void
}

interface Coin {
  + getValue(type :Coins): int
}

class EuroCoin implements Coin {
  - int value
  + getValue(type :Coins): int
}

interface Call {
  + getCallerPhoneNumber(): String
  + getReceiverPhoneNumber(): String
  + getDuration(): int
}

class PublicCall implements Call {
  - String callerPhoneNumber
  - String receiverPhoneNumber
  - int duration
  + PublicCall(callerPhoneNumber: String, receiverPhoneNumber: String)
  + getCallerPhoneNumber(): String
  + getReceiverPhoneNumber(): String
  + getDuration(): int
}
enum Coins{
    Penny
    Nickel
    Dime
    Quarter
    Half Dollar
    Dollar Coin
}
PhoneBooth <|.. PublicPhoneBooth
Call <|.. PublicCall

@enduml
